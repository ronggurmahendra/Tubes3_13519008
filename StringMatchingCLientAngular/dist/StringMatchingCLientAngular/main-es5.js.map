{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/server-interface.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChatComponent","serverInterfaceService","username","newMessage","messages","resps","sendDummy","console","log","getTasks","trim","length","err","sendMessage","ServerInterfaceService","url","Tugas","date","kodeMataKuliah","jenisTugas","topikTugas","a","post","res","data","get","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'StringMatchingCLientAngular';\n}\n","WKWKW\n\n<app-chat></app-chat>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\n//import {ChatComponent} from './chat/chat.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<link\n  rel=\"stylesheet\"\n  href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n  integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n  crossorigin=\"anonymous\"\n/>\n<link\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\"\n  type=\"text/css\"\n  rel=\"stylesheet\"\n/>\n\n<!-- Toolbar -->\n\n<h3 class=\" text-center\">CHAT BOT REGEX</h3>\n<div class=\"messaging\">\n    <div class=\"inbox_msg\">\n    <div class=\"inbox_people\">\n\n    <div class=\"mesgs\">\n        <div class=\"msg_history\">\n        <li class=\"message\" *ngFor=\"let message of messages; ; index as i\">\n\n            <div class=\"incoming_msg\">\n                <div class=\"incoming_msg_img\">\n                </div>\n                <div class=\"received_msg\">\n                <div class=\"received_withd_msg\">\n                    <p>{{ message }}</p>\n                </div>\n                </div>\n            </div>\n\n\n            <div class=\"outgoing_msg\">\n                <div class=\"sent_msg\">\n                <p>{{ resps[i] }}</p>\n                </div>\n            </div>\n\n        </li>\n        </div>\n        <div class=\"type_msg\">\n        <form class=\"input_msg_write\" (ngSubmit)=\"sendMessage()\">\n            <input\n            type=\"text\"\n            class=\"write_msg\"\n            placeholder=\"Type a message\"\n            name=\"newMessage\"\n            [(ngModel)]=\"newMessage\"\n            />\n            <button class=\"msg_send_btn\" type=\"button\" >\n            <i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\" (click)=\"sendMessage()\"></i>\n            </button>\n        </form>\n        </div>\n    </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ServerInterfaceService } from '../server-interface.service'\n//import { StreamChat, ChannelData, Message, User } from 'stream-chat';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  title = 'angular-chat';\n  //channel: ChannelData;\n  username = '';\n  //messages: Message[] = [];\n  messages : String[];\n  resps : String[];\n  newMessage = '';\n  //channelList: ChannelData[];\n  chatClient: any;\n  //currentUser: User;\n  constructor(private serverInterfaceService : ServerInterfaceService) { }\n\n  ngOnInit(): void {\n    this.messages = [\"mess1\",\"mess2\",\"mess3\"];\n    this.resps = [\"resp1\",\"resp1\",\"resp1\"];\n    this.serverInterfaceService.sendDummy();\n\n    console.log(this.serverInterfaceService.getTasks());\n  }\n\n  sendMessage_(){\n    console.log(\"pressed\");\n  }\n\n  async sendMessage() {\n    if (this.newMessage.trim() === '') {\n      return;\n    }\n\n    try {\n      console.log(this.newMessage)\n      this.messages[this.messages.length] = this.newMessage\n      this.resps[this.resps.length] = this.newMessage\n      this.newMessage = '';\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport axios from 'axios';\nimport { task } from './models/task'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerInterfaceService {\n  private url  = \"http://localhost:5000\";\n  //public Task : task;\n\n  constructor() {\n    console.log(\"Server Interface Initialized\");\n   }\n\n\n   sendDummy(){\n    \n    var Tugas : task = { \n      date : \"25-04-2021\",\n      kodeMataKuliah : \"IF0000\",\n      jenisTugas : \"Tugas\",\n      topikTugas : \"PR\",\n    }\n    axios.post(this.url + \"/task/add\", Tugas)\n    .then( res => console.log(res.data));\n   }\n\n   sendTask(Tugas : task){\n    axios.post(this.url + \"/task/add\", Tugas)\n    .then( res => console.log(res.data));\n   }\n\n   getTasks(){\n    var Tugas : any; \n     axios.get(this.url + \"/task\")\n     .then( res => \n      {if(res.data.length > 0){\n         console.log(res.data);\n     }}\n     )\n    \n    return Tugas;\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}