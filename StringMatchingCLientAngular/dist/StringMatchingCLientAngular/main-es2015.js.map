{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/server-interface.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,6BAA6B,CAAC;KACvC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,iEAEA;QAAA,sEAAqB;;6FDKR,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACO;AACtD,sDAAsD;AACT;;AActC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;SACZ;mIAIU,SAAS,mBAXlB,2DAAY;QACZ,kEAAa,aAGb,uEAAa;QACb,oEAAgB;QAChB,0DAAW;6FAKF,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;;;;;;;;;ACpBiD;;;;;;ICqB1C,yEAEI;IAAA,0EACI;IAAA,qEACM;IACN,0EACA;IAAA,0EACI;IAAA,oEAAG;IAAA,uDAAa;IAAA,4DAAI;IACxB,4DAAM;IACN,4DAAM;IACV,4DAAM;IAGN,0EACI;IAAA,0EACA;IAAA,oEAAG;IAAA,wDAAc;IAAA,4DAAI;IACrB,4DAAM;IACV,4DAAM;IAEV,4DAAK;;;;;IAZU,0DAAa;IAAb,2EAAa;IAQjB,0DAAc;IAAd,mFAAc;;AD1B1B,MAAM,aAAa;IAUxB,oBAAoB;IACpB,YAAoB,sBAA+C;QAA/C,2BAAsB,GAAtB,sBAAsB,CAAyB;QAVnE,UAAK,GAAG,cAAc,CAAC;QACvB,uBAAuB;QACvB,aAAQ,GAAG,EAAE,CAAC;QAId,eAAU,GAAG,EAAE,CAAC;IAIuD,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,CAAC;QACvC,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,CAAC;QAExC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IAEK,WAAW;;YACf,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBACjC,OAAO;aACR;YAED,IAAI;gBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU;gBACrD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU;gBAC/C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;aACtB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;QACH,CAAC;KAAA;;0EAtCU,aAAa;6FAAb,aAAa;QCV1B,qEAMA;QAAA,qEAMA;QAEA,wEAAyB;QAAA,yEAAc;QAAA,4DAAK;QAC5C,yEACI;QAAA,yEACA;QAAA,yEAEA;QAAA,yEACI;QAAA,yEACA;QAAA,wGAEI;QAkBJ,4DAAM;QACN,0EACA;QAAA,4EACI;QAD0B,0IAAY,iBAAa,IAAC;QACpD,6EAOA;QAFA,sLAAwB;QALxB,4DAOA;QAAA,8EACA;QAAA,yEAA8E;QAA5B,iIAAS,iBAAa,IAAC;QAAC,4DAAI;QAC9E,4DAAS;QACb,4DAAO;QACP,4DAAM;QACV,4DAAM;QACN,4DAAM;QACV,4DAAM;QA3CN,4DACI;;QAKwB,0DAA8C;QAA9C,iFAA8C;QA4B9D,0DAAwB;QAAxB,mFAAwB;;6FDvCvB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACjB;;AAKnB,MAAM,sBAAsB;IAEjC,qBAAqB;IAErB;QAHQ,QAAG,GAAI,uBAAuB,CAAC;QAIrC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAC7C,CAAC;IAGD,SAAS;QAER,IAAI,KAAK,GAAU;YACjB,IAAI,EAAG,YAAY;YACnB,cAAc,EAAG,QAAQ;YACzB,UAAU,EAAG,OAAO;YACpB,UAAU,EAAG,IAAI;SAClB;QACD,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,EAAE,KAAK,CAAC;aACxC,IAAI,CAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ,CAAC,KAAY;QACpB,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,EAAE,KAAK,CAAC;aACxC,IAAI,CAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QACP,IAAI,KAAW,CAAC;QACf,4CAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;aAC5B,IAAI,CAAE,GAAG,CAAC,EAAE;YACX,IAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACzB;QAAA,CAAC,CACD;QAEF,OAAO,KAAK,CAAC;IACf,CAAC;;4FApCU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;6FAEP,sBAAsB;cAHlC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'StringMatchingCLientAngular';\n}\n","WKWKW\n\n<app-chat></app-chat>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\n//import {ChatComponent} from './chat/chat.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ServerInterfaceService } from '../server-interface.service'\n//import { StreamChat, ChannelData, Message, User } from 'stream-chat';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  title = 'angular-chat';\n  //channel: ChannelData;\n  username = '';\n  //messages: Message[] = [];\n  messages : String[];\n  resps : String[];\n  newMessage = '';\n  //channelList: ChannelData[];\n  chatClient: any;\n  //currentUser: User;\n  constructor(private serverInterfaceService : ServerInterfaceService) { }\n\n  ngOnInit(): void {\n    this.messages = [\"mess1\",\"mess2\",\"mess3\"];\n    this.resps = [\"resp1\",\"resp1\",\"resp1\"];\n    this.serverInterfaceService.sendDummy();\n\n    console.log(this.serverInterfaceService.getTasks());\n  }\n\n  sendMessage_(){\n    console.log(\"pressed\");\n  }\n\n  async sendMessage() {\n    if (this.newMessage.trim() === '') {\n      return;\n    }\n\n    try {\n      console.log(this.newMessage)\n      this.messages[this.messages.length] = this.newMessage\n      this.resps[this.resps.length] = this.newMessage\n      this.newMessage = '';\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","<link\n  rel=\"stylesheet\"\n  href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n  integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n  crossorigin=\"anonymous\"\n/>\n<link\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\"\n  type=\"text/css\"\n  rel=\"stylesheet\"\n/>\n\n<!-- Toolbar -->\n\n<h3 class=\" text-center\">CHAT BOT REGEX</h3>\n<div class=\"messaging\">\n    <div class=\"inbox_msg\">\n    <div class=\"inbox_people\">\n\n    <div class=\"mesgs\">\n        <div class=\"msg_history\">\n        <li class=\"message\" *ngFor=\"let message of messages; ; index as i\">\n\n            <div class=\"incoming_msg\">\n                <div class=\"incoming_msg_img\">\n                </div>\n                <div class=\"received_msg\">\n                <div class=\"received_withd_msg\">\n                    <p>{{ message }}</p>\n                </div>\n                </div>\n            </div>\n\n\n            <div class=\"outgoing_msg\">\n                <div class=\"sent_msg\">\n                <p>{{ resps[i] }}</p>\n                </div>\n            </div>\n\n        </li>\n        </div>\n        <div class=\"type_msg\">\n        <form class=\"input_msg_write\" (ngSubmit)=\"sendMessage()\">\n            <input\n            type=\"text\"\n            class=\"write_msg\"\n            placeholder=\"Type a message\"\n            name=\"newMessage\"\n            [(ngModel)]=\"newMessage\"\n            />\n            <button class=\"msg_send_btn\" type=\"button\" >\n            <i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\" (click)=\"sendMessage()\"></i>\n            </button>\n        </form>\n        </div>\n    </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport axios from 'axios';\nimport { task } from './models/task'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerInterfaceService {\n  private url  = \"http://localhost:5000\";\n  //public Task : task;\n\n  constructor() {\n    console.log(\"Server Interface Initialized\");\n   }\n\n\n   sendDummy(){\n    \n    var Tugas : task = { \n      date : \"25-04-2021\",\n      kodeMataKuliah : \"IF0000\",\n      jenisTugas : \"Tugas\",\n      topikTugas : \"PR\",\n    }\n    axios.post(this.url + \"/task/add\", Tugas)\n    .then( res => console.log(res.data));\n   }\n\n   sendTask(Tugas : task){\n    axios.post(this.url + \"/task/add\", Tugas)\n    .then( res => console.log(res.data));\n   }\n\n   getTasks(){\n    var Tugas : any; \n     axios.get(this.url + \"/task\")\n     .then( res => \n      {if(res.data.length > 0){\n         console.log(res.data);\n     }}\n     )\n    \n    return Tugas;\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}